{"version":3,"sources":["components/Header.jsx","components/Countries.jsx","components/Country.jsx","components/Footer.jsx","components/Error.jsx","App.js","reportWebVitals.js","index.js"],"names":["Header","className","to","Countries","useState","countries","setCountries","searchTerm","setSearchTerm","useEffect","axios","get","then","response","console","log","data","type","name","placeholder","onChange","event","target","value","map","country","index","src","flag","alt","nativeName","capital","population","toLocaleString","toLowerCase","includes","Country","setCountry","useParams","history","useHistory","handleClick","alpha3Code","push","window","location","reload","languages","currency","currencies","region","subregion","timezones","currencyName","code","langName","borderCountry","borders","borderingCountryCodes","borderName","onClick","Footer","year","Date","getFullYear","Error","App","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7f2a73d1.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nfunction Header() {\n\n  return (\n    <div className=\"header\">\n      <Link className=\"headerLink\" to=\"/\">\n        <h1 className=\"headerText\">Countries App</h1>\n      </Link>\n    </div>\n  );\n}\n\nexport default Header;\n","import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\n\nfunction Countries() {\n  // https://restcountries.eu/rest/v2/all\n\n  const [countries, setCountries] = useState([]);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n\n  // fetch all data from countries API using axios npm,\n  //   used useEffect to only call api once, passed empty array\n\n  useEffect(() => {\n    axios.get(\"https://restcountries.eu/rest/v2/all\").then((response) => {\n      console.log(response.data);\n      setCountries(response.data);\n    });\n  }, []);\n\n  const renderCountries = (country, index) => {\n    if (searchTerm === \"\") {\n\n    return (\n      <Link className=\"mainCardLink\" to={`/${country.name}`} key={index}>\n        <div className=\"countryCardMain\" key={index}>\n          <img className=\"flag\" src={country.flag} alt={country.name} />\n          <p className=\"topInfoMain\">\n            <b>{country.name} | {country.nativeName}</b>\n          </p>\n          <p className=\"topInfoMain\"><b>Capital: </b>{country.capital}</p>\n          <p className=\"popInfoMain\">\n            <b>Population:</b> {country.population.toLocaleString()}\n          </p>\n        </div>\n      </Link>\n\n      // search will only return where search term matches the country.name\n      \n    ) } else if ((country.name.toLowerCase()).includes(searchTerm.toLowerCase())) {\n      \n      return (\n        <Link className=\"mainCardLink\" to={`countries-app/${country.name}`}>\n        <div className=\"countryCardMain\" key={index}>\n          <img className=\"flag\" src={country.flag} alt={country.name} />\n          <p className=\"topInfoMain\">\n            <b>{country.name} | {country.nativeName}</b>\n          </p>\n          <p className=\"topInfoMain\"><b>Capital: </b>{country.capital}</p>\n          <p className=\"popInfoMain\">\n            <b>Population:</b> {country.population.toLocaleString()}\n          </p>\n        </div>\n      </Link>\n      )\n    }\n  };\n\n  // search functionality\n\n  function handleChange(event) {\n    setSearchTerm(event.target.value)\n    console.log(searchTerm);\n  }\n\n  return (\n    <div className=\"mainContent\">\n    <input className=\"searchBar\" type=\"text\" name=\"search\" placeholder=\"Search...\" onChange={handleChange}></input>\n      <div className=\"countries\">{countries.map(renderCountries)}</div>\n    </div>\n  );\n}\n\nexport default Countries;","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Link, useParams, useHistory } from \"react-router-dom\";\n\nfunction Country() {\n  const [country, setCountry] = useState([]);\n  const [countries, setCountries] = useState([]);\n  const { name } = useParams();\n\n  const history = useHistory();\n\n  // get current country info from api call\n\n  useEffect(() => {\n    axios\n      .get(`https://restcountries.eu/rest/v2/name/${name}`)\n      .then((response) => {\n        console.log(response.data);\n        setCountry(response.data);\n      });\n  }, []);\n\n  // get all Countries to get border country link from code\n\n  useEffect(() => {\n    axios.get(\"https://restcountries.eu/rest/v2/all\").then((response) => {\n      console.log(response.data);\n      setCountries(response.data);\n    });\n  }, []);\n\n  const renderCountry = (country, index) => {\n    const languages = country.languages;\n    const currency = country.currencies;\n\n    return (\n      <div className=\"countryInfo\">\n        <Link to=\"/countries-app\">\n          <button className=\"backBtn\">&lt; Back</button>\n        </Link>\n        <img className=\"infoFlag\" src={country.flag} alt={country.name} />\n        <div className=\"singleCountryCard\" key={index}>\n          <p>\n            <b>\n              {country.name} ( {country.nativeName} )\n            </b>\n          </p>\n          <p>\n            <b>Capital:</b> {country.capital}\n          </p>\n          <p>\n            <b>Region:</b> {country.region}\n          </p>\n          <p>\n            <b>Subregion:</b> {country.subregion}\n          </p>\n          <p>\n            <b>Population:</b> {country.population.toLocaleString()}\n          </p>\n          <p>\n            <b>Timezone:</b> {country.timezones} &nbsp;\n          </p>\n          <p>\n            <b>Currency:</b>{\" \"}\n            {currency.map((currencyName) => {\n              return <span>{currencyName.code} </span>;\n            })}\n          </p>\n          <p>\n            <b>Languages:</b>{\" \"}\n            {languages.map((langName) => {\n              return <span>{langName.name} </span>;\n            })}\n          </p>\n        </div>\n      </div>\n    );\n  };\n\n  // this function gets the full country name from the border countries, want to use it to redirect to that countries page onClick\n\n  function handleClick(event) {\n    console.log(event.target.value);\n\n    countries.map((country) => {\n      if (event.target.value === country.alpha3Code) {\n        console.log(country.alpha3Code);\n        console.log(country.name);\n        history.push(`/${country.name}`);\n        window.location.reload();\n      }\n    });\n  }\n\n  const renderBorders = (borderCountry, index) => {\n    const borders = borderCountry.borders;\n    const borderingCountryCodes = borderCountry.borders;\n    console.log(\"codes: \" + borderingCountryCodes);\n\n    console.log(countries);\n\n    return (\n      <div className=\"bordering\">\n        <p>Bordering Countries</p>\n        <div className=\"btn-group\">\n          {borders.map((borderName) => {\n            return (\n              <button\n                className=\"border-btn\"\n                value={borderName}\n                onClick={handleClick}\n              >\n                {borderName}\n              </button>\n            );\n          })}\n        </div>\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"mainContent\">\n      <div className=\"countriesSingle\">{country.map(renderCountry)}</div>\n      <div className=\"borderLinks\">{country.map(renderBorders)}</div>\n    </div>\n  );\n}\n\nexport default Country;\n\n// `https://restcountries.eu/rest/v2/name/${name}`\n// https://restcountries.eu/rest/v2/alpha/${country.alpha3Code}\n","import React from \"react\";\n\nfunction Footer() {\n  const year = new Date().getFullYear();\n  return (\n    <div className=\"Footer\">\n      <p>Mervyn Levis {year}</p>\n    </div>\n  );\n}\n\nexport default Footer;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nfunction Error() {\n  return (\n    <div className=\"404\">\n      <h1>404</h1>\n      <h2>Page Not Found</h2>\n      <Link to=\"/\">Home</Link>\n    </div>\n  );\n}\n\nexport default Error;\n","import \"./App.css\";\nimport Header from \"./components/Header\";\nimport Countries from \"./components/Countries\";\nimport Country from \"./components/Country\";\nimport Footer from \"./components/Footer\";\nimport Error from \"./components/Error\";\n\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <Header />\n        <Switch>\n          <Route exact path=\"/countries-app\" component={Countries} />\n          <Route exact path=\"/countries-app/:name\" component={Country} />\n          <Route component={Error} />\n        </Switch>\n        <Footer />\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}